Dancer2::Plugin::Cart
  Hi, my name is Andrew Baerg
  A little bit about myself
  I like to ride bikes... to work, in the rocky mountains, and also in vienna
  I am married and have 3 awesome boys
  I work for SOLE who is the maker of world famous heat mouldable insoles and has recently started to make shoes with recycled wine corks!
  I have been developing their systems since 2001 - the golden age of Interchange

Why did we write Dancer2::Plugin::Cart?
  It is no longer the golden age of Interchange5.
  I'd like to say it is the golden age of Dancer2
  Bottom line is we really want to start developing with Dancer2

However, we have an existing database in Interchange5
  on top of which is built a valuable erp system

with a lot of existing business logic
  simply put we don't want to throw this away

so we asked the questions
  what if we had an ecommerce platform that didn't provide a schema
  that didn't have a source of product data
  that didn't provide functions to calculate shipping, taxes, or discounts
  not even payment processing

what would it do?

manage the cart session
  functions for adding and removing items, and changing quantities

calculate totals
  function to calculate an order total

provide a checkout flow
  shipping, billing form
  place order

Session storage
  at a minimum, it would need to store all of this temporarily in the session

hooks!
  to use or modify the session data

inject product data
  source of data may simply be hard coded, it may be a single item
  maybe it's coming from a data source, like your accounting system
  maybe it's coming from an external source, for example, you can set up products within the Stripe payment gateway and fetch them using their API.

Adjustments to total
  for things like taxes, shipping, discounts

Validation of Forms
  shipping, billing

Placing the order
  process payment
  send receipt
  order logging

Ecommerce is complicated and unique
  there is no way to sugar coat this fact
  unless you have blinders on and are simply ignoring the complexity, you will know that a single ecommerce platform simply cannot do everything or handle every situation.

BUT we CAN make it easy
  to do everything

How do we make it easy?

out of the box demo
  clean slate to work with
  you don't have to peel back the layers of copmlexity to do something simple
hooks for maintainability
  complexity is not hidden, it's in a separate plugin or your own modules
ecosystem of plugins
  most cases you can simply use a CPAN module in your hook
  but I also see plugins under the Cart namespace which provide standard hooks to things like payment gateways

Why should anyone else care?

Doesn't everyone want a clone of Amazon for their store?
  not even close

majority of web stores are extremely simple or unique
  they are either selling a single item or 2
  or selling a subscription to a service

Stripe
  payment processors like Stripe provide majority of customer and order schema
  they don't need to duplicate the schema or even provide an admin

Live Demo

1 Base Dancer App
2 Use Plugin
3 Add link to /products
  - no products, we need to add some. Let's use the products hook
4 Add a Product
  - a Dancer2 Book!
  - Let's place an order, that was quick!
5 Create the view files
  - use the script provided with the Plugin, currently creates Template Toolkit views
  - this allows us to start customizing the data that is stored and displayed from the session
6 Display the description we added in Step 4
  - edit all of the view files
7 Send an Email receipt
  - use the after_checkout hook
  - we are simply sending the receipt view template
  - note that currently the order is only in the session, we could also add a hook to email the order to the admin
8 Add a coupon input
  - by simply adding an input to the shipping form, it is now accessible from the hooks and part of the order in the session
9 Check if we have a valid coupon
  - use the validate_shipping_params hook
  - error is displayed on the shipping view
10 Clear default adjustments
  - default adjustmenst are added for discounts, shipping, and taxes
  - we could add our discount into the discounts, but we want to display the coupon description
  - use the adjustments hook
11 Add coupon discount to adjustments
  - use the adjustments hook - again! hooks are run in the order they are defined
  - simply push an adjustment!
  - let's take a look
12 Use Cart::Stripe Plugin
  - add stripe api_key, public_api_key, and currency to config
  - this plugin provides some new keywords we can use in our hooks
13 Use DefaultHooks
  - one of the default hooks brings plans in from Stripe
  - but our products hook is overwriting the products list
14 let's push our products instead
  - Now we have Stripe plans in our cart!
15 Add Stripe form to checkout view
  - now we can accept payments by cc!

What's Next?

Start using it!

Cart::Shipment
Cart::VAT
Cart::LedgerSMB?
Cart::Interchange6?

Will you join us? github.com/YourSole/Cart



